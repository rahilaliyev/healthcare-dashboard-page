{"version":3,"sources":["components/Main/Cards/Cards.js","components/Main/LittleCharts/LittleCharts.js","components/Main/Table/Table.js","components/Main/Main.js"],"names":["Cards","CardsLists","useSelector","state","cardDataReducer","data","dispatch","useDispatch","useState","loading","setloading","useEffect","axios","get","then","res","cardData","CardInfo","catch","err","console","log","Loading","className","map","item","key","src","Image","alt","AltImage","Text","Value","LittleCharts","LittleChart","littleChartDataReducer","littleChartData","chart","type","background","toolbar","show","fontFamily","foreColor","stroke","curve","width","dashArray","colors","series","name","LittleChartYaxis","grid","borderColor","strokeDashArray","xaxis","categories","LittleChartXaxis","labels","format","tooltip","enabled","axisBorder","height","offsetY","crosshairs","opacity","color","yaxis","tickAmount","min","max","formatter","val","markers","size","title","text","align","margin","offsetX","style","fontSize","fontWeight","legend","position","horizontalAlign","shared","y","custom","seriesIndex","dataPointIndex","w","responsive","breakpoint","options","chart1","LittleChartYaxis2","LittleChartXaxis2","chart2","Table","index","setIndex","tableInfoData","littleTableDataReducer","dataTable","littleTableData","List2","ModalOpenTableDelete","setModalTableDelete","ModalOpenTableEdit","setModalTableEdit","row","Name","Email","moment","unix","Date","seconds","VisitTime","Doctor","Conditions","PenVector","onClick","DeleteVector","deleteUser","setModalTableFuncDelete","setModalTableFuncEdit","userDelete","id","delete","Chart","lazy","Main","fallback","Search"],"mappings":"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","file":"static/js/3.ed5df8c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Cards.scss\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { cardData } from \"../../../redux/actions/actions\";\r\nimport Loading from \"../../Loading/Loading\"\r\n\r\nconst Cards = () => {\r\n  const CardsLists = useSelector((state) => state.cardDataReducer.data);\r\n  const dispatch = useDispatch();\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    axios\r\n      .get(\"https://desolate-hamlet-85078.herokuapp.com/getData\")\r\n      .then((res) => dispatch(cardData(res.data.CardInfo)))\r\n      .catch((err) => console.log(err));\r\n    setloading(false);\r\n  }, [dispatch]);\r\n\r\n  if (loading) {\r\n    return <div><Loading/></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {CardsLists.map((item, key) => (\r\n        <div className=\"card-lists\" key={key}>\r\n          <img src={item.Image} alt={item.AltImage} key={key} />\r\n          <div className=\"info-and-number\">\r\n            <p>{item.Text}</p>\r\n            <p>{item.Value}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport \"./LittleCharts.scss\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { littleChartData } from \"../../../redux/actions/actions\";\r\n\r\nconst LittleCharts = () => {\r\n  const LittleChart = useSelector((state) => state.littleChartDataReducer.data);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://desolate-hamlet-85078.herokuapp.com/getData\")\r\n      .then((res) => dispatch(littleChartData(res.data.LittleCharts)))\r\n      .catch((err) => console.log(err));\r\n  }, [dispatch]);\r\n\r\n  const [chart1] = useState({\r\n    chart: {\r\n      type: \"line\",\r\n      background: \"#fff\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      fontFamily: \"Lato, Helvetica, sans-serif\",\r\n      foreColor: \"#A0A4A8\",\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n      width: 3,\r\n      show: true,\r\n      dashArray: 0,\r\n    },\r\n    colors: [\"#336CFB\"],\r\n    series: [\r\n      {\r\n        name: \"Income in current month\",\r\n        data: LittleChart.LittleChartYaxis,\r\n      },\r\n      {\r\n        name: \"\",\r\n        data: [],\r\n      },\r\n    ],\r\n    grid: {\r\n      show: true,\r\n      borderColor: \"#D7DBDE\",\r\n      strokeDashArray: 5,\r\n    },\r\n\r\n    xaxis: {\r\n      categories: LittleChart.LittleChartXaxis,\r\n      type: \"datetime\",\r\n      labels: {\r\n        format: \"d MMMM\",\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n      axisBorder: {\r\n        show: true,\r\n        height: 2,\r\n        offsetY: -1,\r\n      },\r\n      crosshairs: {\r\n        show: true,\r\n        width: 1,\r\n        opacity: 0.5,\r\n        stroke: {\r\n          color: \"#A9C1FD\",\r\n          width: 1,\r\n          dashArray: 5,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      tickAmount: 5,\r\n      min: 0,\r\n      max: 100000,\r\n      labels: {\r\n        formatter: (val) => {\r\n          return \"$\" + val;\r\n        },\r\n      },\r\n    },\r\n\r\n    markers: {\r\n      size: 4,\r\n      colors: \"#A9C1FD\",\r\n    },\r\n    title: {\r\n      text: \"$ 100 000\",\r\n      align: \"left\",\r\n      margin: 10,\r\n      offsetX: 10,\r\n      offsetY: 20,\r\n      style: {\r\n        fontSize: \"20px\",\r\n        fontWeight: 700,\r\n        fontFamily: \"Lato\",\r\n        color: \"#25282B\",\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: true,\r\n      fontSize: \"12px\",\r\n      fontFamily: \"Lato, Helvetica, Arial\",\r\n      fontWeight: 700,\r\n      position: \"top\",\r\n      horizontalAlign: \"right\",\r\n      labels: {\r\n        colors: \"#A0A4A8\",\r\n      },\r\n      offsetY: -30,\r\n\r\n      markers: {\r\n        width: 0,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        fontFamily: \"Lato\",\r\n      },\r\n      y: {\r\n        show: true,\r\n      },\r\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n        return (\r\n          '<div class=\"arrow_box\">' +\r\n          \"<span>\" +\r\n          \"$\" +\r\n          series[seriesIndex][dataPointIndex] +\r\n          \"</span>\" +\r\n          \"</div>\"\r\n        );\r\n      },\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 350,\r\n        options: {\r\n          legend: {\r\n            offsetY: 10,\r\n            position: \"bottom\",\r\n            horizontalAlign: \"center\",\r\n          },\r\n          title: {\r\n            style: {\r\n              fontSize: \"15px\",\r\n            },\r\n          },\r\n          yaxis: { tickAmount: 2 },\r\n        },\r\n      },\r\n    ],\r\n  });\r\n  const [chart2] = useState({\r\n    chart: {\r\n      type: \"line\",\r\n\r\n      background: \"#fff\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      fontFamily: \"Lato, Helvetica, sans-serif\",\r\n      foreColor: \"#A0A4A8\",\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n      width: 3,\r\n      show: true,\r\n      dashArray: 0,\r\n    },\r\n    colors: [\"#FAC032\"],\r\n    series: [\r\n      {\r\n        name: \"Income in current week\",\r\n        data: LittleChart.LittleChartYaxis2,\r\n      },\r\n      {\r\n        name: \"\",\r\n        data: [],\r\n      },\r\n    ],\r\n    grid: {\r\n      show: true,\r\n      borderColor: \"#D7DBDE\",\r\n      strokeDashArray: 5,\r\n    },\r\n\r\n    xaxis: {\r\n      type: \"datetime\",\r\n      categories: LittleChart.LittleChartXaxis2,\r\n      labels: {\r\n        format: \"d MMMM\",\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        shared: true,\r\n      },\r\n      axisBorder: {\r\n        show: true,\r\n        height: 2,\r\n        offsetY: -1,\r\n      },\r\n    },\r\n    yaxis: {\r\n      tickAmount: 5,\r\n      min: 0,\r\n      max: 100000,\r\n      labels: {\r\n        formatter: (val) => {\r\n          return \"$\" + val;\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      style: {\r\n        fontSize: \"16px\",\r\n        fontFamily: \"Lato\",\r\n      },\r\n      y: {\r\n        show: true,\r\n      },\r\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n        return (\r\n          '<div class=\"arrow_box\">' +\r\n          \"<span>\" +\r\n          series[seriesIndex][dataPointIndex] +\r\n          \"</span>\" +\r\n          \"</div>\"\r\n        );\r\n      },\r\n    },\r\n    markers: {\r\n      size: 4,\r\n      colors: \"#FCDF98\",\r\n    },\r\n    title: {\r\n      text: \"$ 25,000\",\r\n      align: \"left\",\r\n      margin: 10,\r\n      offsetX: 10,\r\n      offsetY: 20,\r\n      style: {\r\n        fontSize: \"20px\",\r\n        fontWeight: 700,\r\n        fontFamily: \"Lato\",\r\n        color: \"#25282B\",\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: true,\r\n      fontSize: \"12px\",\r\n      fontFamily: \"Lato, Helvetica, Arial\",\r\n      fontWeight: 700,\r\n      position: \"top\",\r\n      horizontalAlign: \"right\",\r\n      labels: {\r\n        colors: \"#A0A4A8\",\r\n      },\r\n      offsetY: -30,\r\n\r\n      markers: {\r\n        width: 0,\r\n      },\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 350,\r\n        options: {\r\n          legend: {\r\n            offsetY: 10,\r\n            position: \"bottom\",\r\n            horizontalAlign: \"center\",\r\n          },\r\n          title: {\r\n            style: {\r\n              fontSize: \"15px\",\r\n            },\r\n          },\r\n          yaxis: { tickAmount: 2 },\r\n        },\r\n      },\r\n    ],\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"little-charts-container\">\r\n        <div className=\"little-chart\">\r\n          <ReactApexChart\r\n            options={chart1}\r\n            series={chart1.series}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n        <div className=\"little-chart\">\r\n          <ReactApexChart\r\n            options={chart2}\r\n            series={chart2.series}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LittleCharts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Table.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ModalButtonTable from \"../../Appointment/ModalButtonTableDelete\";\r\nimport PenVector from \"../../../assets/Pen-vector.png\";\r\nimport DeleteVector from \"../../../assets/Delete-vector.png\";\r\nimport { littleTableData } from \"../../../redux/actions/actions\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Table = () => {\r\n  const [index, setIndex] = useState();\r\n  const tableInfoData = useSelector(\r\n    (state) => state.littleTableDataReducer.data\r\n  );\r\n\r\n  const dataTable = useSelector(\r\n    (state) => state.littleTableDataReducer.data[index]\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://desolate-hamlet-85078.herokuapp.com/getData\")\r\n      .then((res) => dispatch(littleTableData(res.data.List2)))\r\n      .catch((err) => console.log(err));\r\n  }, [dispatch]);\r\n\r\n  const [ModalOpenTableDelete, setModalTableDelete] = useState(false);\r\n  const [ModalOpenTableEdit, setModalTableEdit] = useState(false);\r\n  const setModalTableFuncDelete = () => {\r\n    setModalTableDelete(false);\r\n  };\r\n  const setModalTableFuncEdit = () => {\r\n    setModalTableEdit(false);\r\n  };\r\n\r\n  const deleteUser = (key) => {\r\n    setIndex(key);\r\n  };\r\n  const userDelete = () => {\r\n    let deleteUser = {\r\n      Name: dataTable.Name,\r\n      Email: dataTable.Email,\r\n      Date: dataTable.Date,\r\n      Doctor: dataTable.Doctor,\r\n      VisitTime: dataTable.VisitTime,\r\n      Conditions: dataTable.Conditions,\r\n      Image: dataTable.Image,\r\n      id: dataTable.id,\r\n    };\r\n\r\n    axios\r\n      .delete(\r\n        \"https://desolate-hamlet-85078.herokuapp.com/deleteUser\",\r\n        deleteUser\r\n      )\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <section className=\"table\">\r\n      <h5>Appointment Activity</h5>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Date</th>\r\n            <th>Doctor</th>\r\n            <th>Visit Time</th>\r\n            <th>Conditions</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableInfoData.map((row, key) => (\r\n            <tr key={key}>\r\n              <td>\r\n                <img src={row.Image} alt=\"tablePhoto\" /> {row.Name}\r\n              </td>\r\n              <td>{row.Email}</td>\r\n              <td>{moment.unix(row.Date.seconds).format(\"MM/DD/YYYY\")}</td>\r\n              <td>{row.VisitTime}</td>\r\n              <td>{row.Doctor}</td>\r\n              <td>{row.Conditions}</td>\r\n              <td>\r\n                <span className=\"image-name\">\r\n                  <img\r\n                    src={PenVector}\r\n                    alt=\"PenVector\"\r\n                    onClick={() => setModalTableEdit(true)}\r\n                  />\r\n                  <img\r\n                    src={DeleteVector}\r\n                    alt=\"DeleteVector\"\r\n                    key={key}\r\n                    onClick={() => {\r\n                      setModalTableDelete(true);\r\n                      deleteUser(key);\r\n                    }}\r\n                  />\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <ModalButtonTable\r\n        ModalOpenTableDelete={ModalOpenTableDelete}\r\n        setModalTableFuncDelete={setModalTableFuncDelete}\r\n        ModalOpenTableEdit={ModalOpenTableEdit}\r\n        setModalTableFuncEdit={setModalTableFuncEdit}\r\n        userDelete={userDelete}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport Search from \"./Search/Search\";\r\nimport \"./Main.scss\";\r\nimport Cards from \"./Cards/Cards\";\r\nimport LittleCharts from \"./LittleCharts/LittleCharts\";\r\nimport Table from \"./Table/Table\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nconst Chart = lazy(() => import(\"./Chart/Chart\"));\r\n\r\nconst Main = () => {\r\n  return (\r\n    <section className=\"main\">\r\n      <Suspense fallback={<Loading />}>\r\n        <Search />\r\n        <Cards />\r\n        <Chart />\r\n        <LittleCharts />\r\n        <Table />\r\n      </Suspense>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}